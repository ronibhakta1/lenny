services:

  api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: lenny_api
    ports:
      - "8080:80"  
    depends_on:
      db:
        condition: service_healthy
      s3:
        condition: service_healthy
    env_file: .env
    environment:
      - LENNY_PORT=1337 
      - S3_ENDPOINT=s3:9000
      - DB_HOST=db
    volumes:
      - .:/app
    networks:
      - lenny_network

  db:
    image: postgres:16
    container_name: lenny_db
    restart: always
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h localhost || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - lenny_network

  s3:
    image: minio/minio:latest
    env_file: .env
    container_name: lenny_bookshelf
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - bookshelf_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 5
    networks:
      - lenny_network

  readium:
    image: ghcr.io/readium/readium:0.1.0
    container_name: lenny_readium
    ports:
      - "15080:15080"
    volumes:
      - readium_bookshelf:/srv/publications
    depends_on:
      - s3
      - api
    env_file: .env
    networks:
      - lenny_network

networks:
  lenny_network:
    driver: bridge

volumes:
  db_data:
  bookshelf_data:
  readium_bookshelf:
